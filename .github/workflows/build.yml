name: Build
on:
    pull_request:
    push:
        branches: [ ci, master, latest, 3.3-stable ]
    workflow_dispatch:
permissions:
    statuses: write
    contents: read

jobs:
    build-linux-clang:
        name: Linux (Clang)
        runs-on: ubuntu-latest
        timeout-minutes: 4
        env:
            CC: clang
            CFLAGS: -Werror
        steps:
            - uses: actions/checkout@v4
            - name: Install dependencies
              run: |
                  sudo apt update
                  sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libwayland-dev libxkbcommon-dev

            - name: Configure Null shared library
              run: cmake -B build-null-shared -D GLFW_BUILD_WAYLAND=OFF -D GLFW_BUILD_X11=OFF -D BUILD_SHARED_LIBS=ON
            - name: Build Null shared library
              run: cmake --build build-null-shared --parallel

            - name: Configure X11 shared library
              run: cmake -B build-x11-shared -D GLFW_BUILD_WAYLAND=OFF -D GLFW_BUILD_X11=ON -D BUILD_SHARED_LIBS=ON
            - name: Build X11 shared library
              run: cmake --build build-x11-shared --parallel

            - name: Configure Wayland shared library
              run: cmake -B build-wayland-shared -D GLFW_BUILD_WAYLAND=ON -D GLFW_BUILD_X11=OFF -D BUILD_SHARED_LIBS=ON
            - name: Build Wayland shared library
              run: cmake --build build-wayland-shared --parallel

            - name: Configure Wayland+X11 static library
              run: cmake -B build-full-static -D GLFW_BUILD_WAYLAND=ON -D GLFW_BUILD_X11=ON
            - name: Build Wayland+X11 static library
              run: cmake --build build-full-static --parallel

            - name: Configure Wayland+X11 shared library
              run: cmake -B build-full-shared -D GLFW_BUILD_WAYLAND=ON -D BUILD_SHARED_LIBS=ON -D GLFW_BUILD_X11=ON
            - name: Build Wayland+X11 shared library
              run: cmake --build build-full-shared --parallel

    build-macos-clang:
        name: macOS (Clang)
        runs-on: macos-latest
        timeout-minutes: 4
        env:
            CFLAGS: -Werror
            MACOSX_DEPLOYMENT_TARGET: 10.11
            CMAKE_OSX_ARCHITECTURES: x86_64;arm64
        steps:
            - uses: actions/checkout@v4

            - name: Configure Null shared library
              run: cmake -B build-null-shared -D GLFW_BUILD_COCOA=OFF -D BUILD_SHARED_LIBS=ON
            - name: Build Null shared library
              run: cmake --build build-null-shared --parallel

            - name: Configure Cocoa static library
              run: cmake -B build-cocoa-static
            - name: Build Cocoa static library
              run: cmake --build build-cocoa-static --parallel

            - name: Configure Cocoa shared library
              run: cmake -B build-cocoa-shared -D BUILD_SHARED_LIBS=ON
            - name: Build Cocoa shared library
              run: cmake --build build-cocoa-shared --parallel

    build-windows-vs2022:
        name: Windows (VS2022)
        runs-on: windows-latest
        timeout-minutes: 4
        env:
            CFLAGS: /WX
        steps:
            - uses: actions/checkout@v4

            - name: Configure Win32 shared x86 library
              run: cmake -B build-win32-shared-x86 -G "Visual Studio 17 2022" -A Win32 -D BUILD_SHARED_LIBS=ON
            - name: Build Win32 shared x86 library
              run: cmake --build build-win32-shared-x86 --parallel

            - name: Configure Win32 static x64 library
              run: cmake -B build-win32-static-x64 -G "Visual Studio 17 2022" -A x64
            - name: Build Win32 static x64 library
              run: cmake --build build-win32-static-x64 --parallel

            - name: Configure Win32 shared x64 library
              run: cmake -B build-win32-shared-x64 -G "Visual Studio 17 2022" -A x64 -D BUILD_SHARED_LIBS=ON
            - name: Build Win32 shared x64 library
              run: cmake --build build-win32-shared-x64 --parallel

name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=HasinduCs2024_SE_Sonar_231164_6e466635-3b93-4f64-a02b-0ddcf1f7d848 -Dsonar.projectName='SE_Sonar_231164'

